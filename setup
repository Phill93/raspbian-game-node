#!/bin/bash

echo "Hello. This is setup."

USR="pi"
IF="wlan0"
CPUS="2"

# Replace /boot/cmdline.txt since it contains root device mapping to a PARTUUID that 
# changed during parted resize. We try to disable the autoresize here as well.
echo "Replace /boot/cmdline.txt"
echo "dwc_otg.lpm_enable=0 console=serial0,115200 console=tty1 root=/dev/mmcblk0p2 rootfstype=ext4 elevator=deadline fsck.repair=yes rootwait quiet" > "${mount}/boot/cmdline.txt"
cat "${mount}/boot/cmdline.txt"

# Replace /etc/fstab since the non existing PARTUUID has to be changed here as well.
echo "Replace /etc/fstab"
echo "proc            /proc           proc    defaults          0       0" > "${mount}/etc/fstab"
echo "/dev/mmcblk0p1  /boot           vfat    defaults          0       2" >> "${mount}/etc/fstab"
echo "/dev/mmcblk0p2  /               ext4    defaults,noatime  0       1" >> "${mount}/etc/fstab"
cat "${mount}/etc/fstab"

# Disable automatic filesystem expansion on boot
#rm /usr/lib/raspi-config/init_resize.sh
rm /etc/init.d/resize2fs_once
rm /etc/rc3.d/S01resize2fs_once

echo "Fix keyboard layout"
sed -i 's/XKBLAYOUT="gb"/XKBLAYOUT="de"/g' /etc/default/keyboard

echo "Fix locale"
locale-gen en_US.UTF-8

echo "Installing packages."
apt-get -y update
apt-get -y install git batctl alfred wget libssl-dev ncurses-dev
echo "Load batman-adv kernel module at boot"
echo 'batman-adv' | sudo tee --append /etc/modules

echo "Disable DHCPCD on ${IF}"
echo "denyinterfaces ${IF} bat0" | sudo tee --append /etc/dhcpcd.conf

echo "Add Network configuration files"
# bat0
cat <<EOF >>"${mount}/etc/network/interfaces.d/bat0"
auto bat0
iface bat0 inet manual
  pre-up ip link add \$IFACE type batadv
  up ip link set up dev \$IFACE
  up batctl if add wlan0
  # IPv4 Placeholder
  post-down ip link del \$IFACE
EOF

# interface for mesh
cat <<EOF >>"${mount}/etc/network/interfaces.d/${IF}"
auto ${IF}
iface ${IF} inet manual
    wireless-channel 1
    wireless-essid game-mesh
    wireless-mode ad-hoc
    wireless-ap 6a:2b:90:3b:54:98
EOF

echo "net.ipv6.conf.all.use_tempaddr=0" > /etc/sysctl.d/10-ipv6-slaac.conf

echo "Add service for alfred"
cat <<EOF >>"${mount}/etc/systemd/system/alfred.service"
[Unit]
Description=Alfred Master
After=network-online.target
[Service]
Type=simple
ExecStart=/usr/sbin/alfred -m -i bat0 -b none -u /var/run/alfred.sock
WorkingDirectory=/tmp
RestartSec=10
Restart=always
[Install]
WantedBy=multi-user.target
EOF

echo "Add service for batadv-vis"
cat <<EOF >>"${mount}/etc/systemd/system/batadv-vis.service"
[Unit]
Description=A.L.F.R.E.D. batadv-vis
After=alfred.service

[Service]
ExecStart=/usr/sbin/batadv-vis -s -i bat0

[Install]
WantedBy=multi-user.target
EOF

echo "Installing Erlang OTP"
cd /home/$USR
wget -nv http://www.erlang.org/download/otp_src_22.1.tar.gz
tar -xzvf otp_src_22.1.tar.gz
cd otp_src_22.1/
./configure
make -j $CPUS
sudo make install
cd ..
rm otp_src_22.1.tar.gz
sudo rm -R otp_src_22.1

echo "Installing vernemq"
cd /home/$USR
git clone -b master https://github.com/vernemq/vernemq.git
cd vernemq
OVERLAY_VARS=vars/deb_vars.config make rpi32 -j $CPUS

adduser --system --group --home /usr/lib/vernemq vernemq

export vernemq_path="$(pwd)/_build/rpi32/rel/vernemq"

# etc
cp -r ${vernemq_path}/etc /etc/vernemq
chown -R root:root /etc/vernemq
# usr/bin
cp -r ${vernemq_path}/bin/vernemq /usr/bin/vernemq
chown root:root /usr/bin/vernemq
chmod +x /usr/bin/vernemq
cp -r ${vernemq_path}/bin/vmq-admin /usr/bin/vmq-admin
chown root:root /usr/bin/vmq-admin
chmod +x /usr/bin/vmq-admin
cp -r ${vernemq_path}/bin/vmq-passwd /usr/bin/vmq-passwd
chown root:root /usr/bin/vmq-passwd
chmod +x /usr/bin/vmq-passwd
# usr/lib
mkdir -p /usr/lib/vernemq
cp -r ${vernemq_path}/bin /usr/lib/vernemq/bin
chmod +x /usr/lib/vernemq/bin
cp -r ${vernemq_path}/erts-10.5 /usr/lib/vernemq/erts-10.5
cp -r ${vernemq_path}/lib /usr/lib/vernemq/lib
cp -r ${vernemq_path}/releases /usr/lib/vernemq/releases
chown -R vernemq:vernemq /usr/lib/vernemq
# usr/share
cp -r ${vernemq_path}/share /usr/share/vernemq
# var/lib
mkdir -p /var/lib/vernemq
cp -r ${vernemq_path}/data /var/lib/vernemq/data
chown -R vernemq:vernemq /var/lib/vernemq
# var/log
cp -r ${vernemq_path}/log /var/log/vernemq
chown -R vernemq:vernemq /var/log/vernemq

touch /etc/security/limits.d/vernemq.conf
echo "vernemq               soft     nofile          65536" >> /etc/security/limits.d/vernemq.conf
echo "vernemq               hard     nofile          65536" >> /etc/security/limits.d/vernemq.conf

echo "Add ansible"
apt-get install -y python3 python3-dev python3-pip
yes | pip3 install ansible

echo "Install first boot setup scripts"
cd /opt
git clone https://github.com/Phill93/raspbian-game-node-setup

cat <<EOF >>"${mount}/etc/systemd/system/first-boot.service"
[Unit]
Description=First boot setup
After=network-online.target
[Service]
Type=simple
ExecStart=/opt/raspbian-game-node-setup/setup.sh
WorkingDirectory=/opt/raspbian-game-node-setup
[Install]
WantedBy=multi-user.target
EOF

ln -s '/etc/systemd/system/first-boot.service' '/etc/systemd/system/multi-user.target.wants/first-boot.service'

echo "Congratulations! Your custom Raspbian is ready!"

echo "Disk space"
df -h
